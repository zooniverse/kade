apiVersion: v1
kind: ConfigMap
metadata:
  name: kade-staging-shared
data:
  NEW_RELIC_APP_NAME: 'KaDE Staging'
  NEW_RELIC_LOG_LEVEL: info
  NEW_RELIC_MONITOR_MODE: 'true'
  PORT: 80
  RAILS_ENV: staging
  RAILS_LOG_TO_STDOUT: 'true'
  RAILS_MAX_THREADS: '2'
  REDIS_URL: 'redis://kade-staging-redis:6379/0'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kade-staging-app
  labels:
    app: kade-staging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kade-staging-app
  template:
    metadata:
      labels:
        app: kade-staging-app
    spec:
      containers:
        - name: kade-staging-app
          image: ghcr.io/zooniverse/kade:__IMAGE_TAG__
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "1000Mi"
              cpu: "1000m"
          startupProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
            # wait 6 * 10 seconds(default periodSeconds) for the container to start
            # after this succeeds once the liveness probe takes over
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
            # allow a longer response time than 1s
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
            # start checking for readiness after 20s (to serve traffic)
            initialDelaySeconds: 20
            # allow a longer response time than 1s
            timeoutSeconds: 10
          env:
          - name: REVISION
            value: '__IMAGE_TAG__'
          - name: HONEYBADGER_REVISION
            value: '__IMAGE_TAG__'
          envFrom:
          - secretRef:
              name: kade-common-env-vars
          - secretRef:
              name: kade-staging-app-db
          - configMapRef:
              name: kade-staging-shared
---
apiVersion: v1
kind: Service
metadata:
  name: kade-staging-app
spec:
  selector:
    app: kade-staging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kade-staging-sidekiq
  labels:
    app: kade-staging-sidekiq
spec:
  selector:
    matchLabels:
      app: kade-staging-sidekiq
  template:
    metadata:
      labels:
        app: kade-staging-sidekiq
    spec:
      containers:
        - name: kade-staging-sidekiq
          image: ghcr.io/zooniverse/kade:__IMAGE_TAG__
          resources:
            requests:
              memory: "500Mi"
              cpu: "100m"
            limits:
              memory: "1000Mi"
              cpu: "1000m"
          command: ["bundle", "exec", "sidekiq"]
          envFrom:
          - secretRef:
              name: kade-common-env-vars
          - secretRef:
              name: kade-staging-sidekiq-db
          - configMapRef:
              name: kade-staging-shared
          volumeMounts:
          - mountPath: /tmp
            name: kade-staging-sidekiq-data
      volumes:
        - name: kade-staging-sidekiq-data
          hostPath:
            # directory location on host node temp disk
            path: /mnt/kade-staging-sidekiq-data
            type: DirectoryOrCreate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kade-staging-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
spec:
  tls:
  - hosts:
    - kade-staging.zooniverse.org
    secretName: panoptes-staging-tls-secret
  rules:
  - host: hamlet-staging.zooniverse.org
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: kade-staging-app
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kade-staging-tls-secret
spec:
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  secretName: kade-staging-tls-secret
  dnsNames:
    - kade-staging.zooniverse.org
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kade-staging-redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kade-staging-redis
  labels:
    app: kade-staging-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kade-staging-redis
  template:
    metadata:
      labels:
        app: kade-staging-redis
    spec:
      tolerations:
      - key: "servicelife"
        operator: "Equal"
        value: "longlife"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicelife
                operator: In
                values:
                - longlife
      initContainers:
        - name: disable-thp
          image: busybox
          volumeMounts:
            - name: host-sys
              mountPath: /host-sys
          command: ["sh", "-c", "echo never >/host-sys/kernel/mm/transparent_hugepage/enabled"]
      containers:
        - name: kade-staging-redis
          image: redis:6.2
          resources:
            requests:
              memory: "100Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          volumeMounts:
          - name: kade-staging-redis-data
            mountPath: "/data"
      volumes:
        - name: kade-staging-redis-data
          persistentVolumeClaim:
            claimName: kade-staging-redis
        - name: host-sys
          hostPath:
            path: /sys
---
apiVersion: v1
kind: Service
metadata:
  name: kade-staging-redis
spec:
  selector:
    app: kade-staging-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
